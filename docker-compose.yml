version: '3.8'

services:
  api:
    build: .
    working_dir: /app
    container_name: api
    ports:
      - 3000:3000
    command: bash -c "bundle install && rackup -o 0.0.0.0 -p 3000"
    volumes:
      - .:/app
      - rubygems:/usr/local/bundle
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
    networks:
      - abiscoitado-network

  postgres:
    image: postgres:16.2
    container_name: postgres
    restart: always
    environment:
      TZ: America/Sao_Paulo
    env_file:
      - .env
    volumes:
      - ./config/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - abiscoitado-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    ports:
      - "3001:3001"
    networks:
      - abiscoitado-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
      - abiscoitado-network
    logging:
      driver: none

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - api
    ports:
      - "3002:3000"
    env_file:
      - .env
    networks:
      - abiscoitado-network
    logging:
      driver: none

networks:
  abiscoitado-network:
    driver: bridge

volumes:
  database:
  rubygems:
  grafana-storage:
